import requests
import time
import datetime
import threading
import re
import execjs
import os
################################ 配置区开始 ################################
# 使用 www.pushplus.plus 进行消息推送
PUSH_PLUS_TOKEN = os.environ["PUSH_PLUS_TOKEN"]

# 多账号配置
# mobile 手机号
# authToken 签到页面抓到的请求头Authentication
config_list = []
# 获取环境变量
env_dist = os.environ
wmhcks = env_dist.get("wmhcks")
cookies = wmhcks.split('\n')
for index, ck in enumerate(cookies):
    tempList = ck.split("&")
    config_list.append({"mobile": tempList[0],"authToken": tempList[1]})


################################ 配置区结束 ################################


headers = {"User-Agent": "Dalvik/2.1.0 (Linux; U; Android 12; M2011K2C Build/SKQ1.211006.001)"}
msg_list = []


def get_js_file():
    ret = requests.get('https://w2ol.wo.cn/CxbbWUku2oe5/YZscnfc/ce06a9').text
    str = re.search(r'function\sR\$bE\(\){return\s"(.+?)"', ret).group(1)
    js_str = 'var str="'+str+'";'
    js_str = js_str + '''
        var R$dN = {}
    
        function R$bE() {
            return "ivycc_]{?{m.Kl>gCICa==xK}B|Ku[F][gAy`|d,<jf-]~H7Yai)JKEvx`wy_6`cy_.}u_6_<^M6}`e+)5]`-{]=5vf{|f{g~=bh{fjw`.YXvdfch{yh{zG]h{g./~hhd.WWYYYVZXZVZ()V,).,X,X/~hhdg.WWxc`VkcVyb.Y,(([/~hhd.WWxc`VkcVyb.Y-XXX/~hhdg.WWxc`VkcVyb.(([/~hhd.WWxc`VkcVyb.,X/~hhdg.WWzknVxc`VkcVyb.Y,(([/~hhd.WWzknVxc`VkcVyb.Y-XXX/~hhdg.WWaVkcVyb.Y,(([/~hhd.WWaVkcVyb.Y-XXX/~hhdg.WWaVkcVyb.(([/~hhd.WWaVkcVyb.,X/~hhdg.WWkZc`VkcVyb.Y,(([/~hhd.WWkZc`VkcVyb.Y-XXX/~hhdg.WWkZc`VkcVyb.(([/~hhd.WWkZc`VkcVyb.,X/~hhdg.WWk{xVkcVycaVyb.Y,(([/~hhdg.WWk{xVkcVycaVyb.(([/~hhdg.WWkcVyb.Y,(([/~hhd.WWkcVyb.Y-XXX/~hhdg.WWkcVyb.(([/~hhd.WWkcVyb.,X/~hhdg.WWkcVycaVyb.Y,(([/~hhd.WWkcVycaVyb.Y-XXX/~hhdg.WWkcVycaVyb.(([/~hhd.WWkcVycaVyb.,X/~hhdg.WWkkkVkcVyb.Y,(([/~hhd.WWkkkVkcVyb.Y-XXX/~hhdg.WWkkkVkcVyb.(([/~hhd.WWkkkVkcVyb.,X/~hhdg.WWkkkVkcVycaVyb.Y,(([/~hhd.WWkkkVkcVycaVyb.Y-XXX/~hhdg.WWkkkVkcVycaVyb.(([/~hhd.WWkkkVkcVycaVyb.,X/vf{gDwh~.W7lxxKI_iZc{)Wvhc_{bH]a{cih.Y,XXvhc_{bIg{zH~f{g~c`z.)Xvgk]hy~:`w}g.Xv{bwx`{ui]{jh.Xv{bwx`{uy]d~{fu|cfa.X)|";
        }
    
        function R$ml(R$hT) {
            var R$jV, R$b8 = R$hT.length, R$ce = [], R$gc = R$hT.charCodeAt(0) - 93;
            for (var R$im = 0, R$iM = 1; R$iM < R$b8; ++R$iM) {
                R$jV = R$hT.charCodeAt(R$iM);
                if (R$jV >= 40 && R$jV < 92) {
                    R$jV += R$gc;
                    if (R$jV >= 92)
                        R$jV = R$jV - 52;
                } else if (R$jV >= 93 && R$jV < 127) {
                    R$jV += R$gc;
                    if (R$jV >= 127)
                        R$jV = R$jV - 34;
                }
                R$ce[R$im++] = R$jV;
            }
            return String.fromCharCode.apply(null, R$ce);
        }
    
        function R$lg(R$ka) {
            var R$ce = R$dN;
            var R$dm = R$ka["substr"](0, R$ka.length - 2);
            var R$im = parseInt(R$ka["substr"](R$ka.length - 2), 16);
            var R$jV = R$dm["split"]('`');
            for (var R$iM = 0; R$iM < R$jV.length; R$iM++) {
                var R$gc = R$jV[R$iM]["indexOf"](":");
                if (R$gc > 0) {
                    var R$g9 = R$jV[R$iM]["slice"](0, R$gc);
                    var R$b8 = R$jV[R$iM]["slice"](R$gc + 1);
                    R$ce[R$g9] = R$b8;
                }
            }
            // R$lN = R$dN["protectedSites"];
            // var R$hT = R$dN["tokenTimeout"] * 900;
            // R$bN = R$hT + R$mJ();
        }
        R$lg(R$ml(str))
        console.log(R$dN)
        // R$dN.cookieKey='WxJsOUOmIIbWgNfW_3Ri3sevgClPAHFeLCUYJKLpjIG';
        // R$dN.blackBlock='vc8SODY4MC0_K0s2ICwivq';
    
        var R$bq;
        function R$jm() {
            var R$iM = "L9skahqwVwYX3e4https";
            var R$jV = "K";
            var R$gc = R$mv();
            console.log(R$gc)
            var R$b8 = R$a7();
            console.log(R$b8)
            var R$hT = R$bb();
            console.log(R$hT)
            var R$im = R$jV + R$fk(R$b8["concat"](R$kF(R$hT, R$gc)));
            R$i3 = R$iM + "=" + R$im;
            return R$im;
        }
    
        function R$mv() {
            return R$mn(R$dN["cookieKey"])["slice"](0, 32);
        }
    
        function R$mn(R$iM) {
            var R$g9 = R$iM.length
                , R$jS = new Array(Math["floor"](R$g9 * 3 / 4))
                , R$dq = "charCodeAt";
            var R$c5, R$kz, R$i1, R$dG;
            var R$ce = 0
                , R$dm = 0
                , R$hT = R$g9 - 3;
            var R$gc = R$bq();
            var R$ci = R$gc[0]
                , R$cX = R$gc[1]
                , R$b8 = R$gc[2]
                , R$im = R$gc[3]
                , R$ka = R$gc[4]
                , R$jV = R$gc[5];
            for (R$ce = 0; R$ce < R$hT; ) {
                R$c5 = R$iM[R$dq](R$ce++);
                R$kz = R$iM[R$dq](R$ce++);
                R$i1 = R$iM[R$dq](R$ce++);
                R$dG = R$iM[R$dq](R$ce++);
                R$jS[R$dm++] = R$ci[R$c5] | R$cX[R$kz];
                R$jS[R$dm++] = R$b8[R$kz] | R$im[R$i1];
                R$jS[R$dm++] = R$ka[R$i1] | R$jV[R$dG];
            }
            if (R$ce < R$g9) {
                R$c5 = R$iM[R$dq](R$ce++);
                R$kz = R$iM[R$dq](R$ce++);
                R$jS[R$dm++] = R$ci[R$c5] | R$cX[R$kz];
                if (R$ce < R$g9) {
                    R$i1 = R$iM[R$dq](R$ce);
                    R$jS[R$dm++] = R$b8[R$kz] | R$im[R$i1];
                }
            }
            return R$jS;
        }
    
        function R$d7() {
            var R$hT = R$bC();
            var R$gc = [];
            for (var R$dm = 0; R$dm < 6; R$dm++) {
                R$gc[R$dm] = [];
            }
            R$bq = function() {
                return R$gc;
            }
            ;
            var R$im = R$gc[0]
                , R$iM = R$gc[1]
                , R$ce = R$gc[2]
                , R$b8 = R$gc[3]
                , R$ka = R$gc[4]
                , R$jV = R$gc[5];
            R$jl(R$jV, 0, 255, -1);
            for (R$dm = 0; R$dm < R$hT.length; R$dm++) {
                var R$g9 = R$hT[R$dm]["charCodeAt"](0);
                R$im[R$g9] = R$dm << 2;
                R$iM[R$g9] = R$dm >> 4;
                R$ce[R$g9] = (R$dm & 15) << 4;
                R$b8[R$g9] = R$dm >> 2;
                R$ka[R$g9] = (R$dm & 3) << 6;
                R$jV[R$g9] = R$dm;
            }
        }
        function R$bC() {
            return "qrcklmDoExthWJiHAp1sVYKU3RFMQw8IGfPO92bvLNj.7zXBaSnu0TC6gy_4Ze5d{}|~ !#$%()*+,-:=?@[]^"["split"]("");
        }
        function R$jl(R$jV, R$gc, R$hT, R$iM) {
            for (; R$gc < R$hT; R$gc++) {
                R$jV[R$gc] = R$iM;
            }
        }
        function R$a7() {
            return R$mn(R$dN["blackBlock"])["slice"](0, 16);
        }
        function R$bb(R$jV) {
            var R$hT = R$hO(0xffffffff);
            var R$im = (new Date()["getTime"]()) % 0xffffffff;
            var R$gc = R$kE();
            var R$iM = R$mg([R$hT, R$im]);
            R$iM = R$iM["concat"](R$gc);
            R$iM.push(R$lX(R$iM));
            return R$iM;
        }
        function R$hO(R$jV) {
            return Math["floor"](Math["random"] * R$jV);
        }
        // 貌似是浏览器指纹
        function R$kE() {
            // R$lD();
            // var R$jV = [1, R$mg([R$mX]), R$mH, R$jB(), R$ki(R$dn())];
            return [1, 65, 128, 0, 0, 22, 230, 85, 239, 206, 35, 181, 64, 131, 253, 122, 34, 138, 180, 16, 90, 243, 76, 4, 55, 255, 0, 0, 0, 0, 0, 0, 0, 0];
        }
        function R$mg(R$jV) {
            var R$b8 = R$jV.length, R$gc = 0, R$iM = 0, R$im = R$jV.length * 4, R$hT, R$ce;
            R$ce = new Array(R$im);
            while (R$gc < R$b8) {
                R$hT = R$jV[R$gc++];
                R$ce[R$iM++] = (R$hT >>> 24) & 0xFF;
                R$ce[R$iM++] = (R$hT >>> 16) & 0xFF;
                R$ce[R$iM++] = (R$hT >>> 8) & 0xFF;
                R$ce[R$iM++] = R$hT & 0xFF;
            }
            return R$ce;
        }
        function R$lX(R$iM) {
            if (typeof R$iM === "string")
                R$iM = R$cd(R$iM);
            var R$gc = 0
                , R$hT = R$iM.length
                , R$jV = 0;
            while (R$jV < R$hT) {
                R$gc = R$ee()[(R$gc ^ R$iM[R$jV++]) & 0xFF];
            }
            return R$gc;
        }
        function R$cd(R$hT) {
            var R$gc = [], R$jV;
            R$hT = R$gY(R$hT);
            for (R$jV = 0; R$jV < R$hT.length; R$jV++)
                R$gc.push(R$hT["charCodeAt"](R$jV));
            return R$gc;
        }
        function R$gY(R$jV) {
            return unescape(encodeURIComponent(R$jV));
        }
        function R$ee() {
            var R$gc = [];
            for (var R$jV = 0; R$jV < 256; ++R$jV) {
                var R$iM = R$jV;
                for (var R$hT = 0; R$hT < 8; ++R$hT) {
                    if ((R$iM & 0x80) !== 0)
                        R$iM = (R$iM << 1) ^ 7;
                    else
                        R$iM <<= 1;
                }
                R$gc[R$jV] = R$iM & 0xff;
            }
            return R$gc;
        }
        function R$fk(R$hT) {
            var R$gc = R$hO(255);
            var R$iM = [];
            R$iM.push(R$gc);
            for (var R$jV = 0; R$jV < R$hT.length; R$jV++) {
                R$iM.push(R$gc ^ R$hT[R$jV]);
            }
            return R$hL(R$iM);
        }
        function R$hL(R$hT, R$jV) {
            if (typeof R$hT === "string")
                R$hT = R$cd(R$hT);
            if (!R$jV)
                R$jV = "qrcklmDoExthWJiHAp1sVYKU3RFMQw8IGfPO92bvLNj.7zXBaSnu0TC6gy_4Ze5d"["split"]("");
            var R$iM = "", R$gc;
            for (R$gc = 0; R$gc < R$hT.length; R$gc = R$gc + 3) {
                R$iM += R$jV[R$hT[R$gc] >> 2];
                R$iM += R$jV[((R$hT[R$gc] & 3) << 4) | (R$hT[R$gc + 1] >> 4)];
                let R$m4 = undefined
                if (R$hT[R$gc + 1] !== R$m4) {
                    R$iM += R$jV[((R$hT[R$gc + 1] & 15) << 2) | (R$hT[R$gc + 2] >> 6)];
                }
                if (R$hT[R$gc + 2] !== R$m4) {
                    R$iM += R$jV[R$hT[R$gc + 2] & 63];
                }
            }
            return R$iM;
        }
        function R$kF(R$gc, R$iM, R$hT) {
            if (typeof R$gc === "string")
                R$gc = R$cd(R$gc);
            var R$jV = R$iF(R$iM, R$hT);
            return R$jV.R$dy(R$gc, true);
        }
        function R$iF(R$dm, R$hT) {
            var R$jV = [[[-966564955,-126059388,-294160487,-159679603,-855539,-697603139,-563122255,-1849309868,1613770832,33620227,-832084055,1445669757,-402719207,-1244145822,1303096294,-327780710,-1882535355,528646813,-1983264448,-92439161,-268764651,-1302767125,-1907931191,-68095989,1101901292,-1277897625,1604494077,1169141738,597466303,1403299063,-462261610,-1681866661,1974974402,-503448292,1033081774,1277568618,1815492186,2118074177,-168298750,-2083730353,1748251740,1369810420,-773462732,-101584632,-495881837,-1411852173,1647391059,706024767,134480908,-1782069422,1176707941,-1648114850,806885416,932615841,168101135,798661301,235341577,605164086,461406363,-538779075,-840176858,1311188841,2142417613,-361400929,302582043,495158174,1479289972,874125870,907746093,-596742478,-1269146898,1537253627,-1538108682,1983593293,-1210657183,2108928974,1378429307,-572267714,1580150641,327451799,-1504488459,-1177431704,0,-1041371860,1075847264,-469959649,2041688520,-1235526675,-731223362,-1916023994,1740553945,1916352843,-1807070498,-1739830060,-1336387352,-2049978550,-1143943061,-974131414,1336584933,-302253290,-2042412091,-1706209833,1714631509,293963156,-1975171633,-369493744,67240454,-25198719,-1605349136,2017213508,631218106,1269344483,-1571728909,1571005438,-2143272768,93294474,1066570413,563977660,1882732616,-235539196,1673313503,2008463041,-1344611723,1109467491,537923632,-436207846,-34344178,-1076702611,-2117218996,403442708,638784309,-1007883217,-1101045791,899127202,-2008791860,773265209,-1815821225,1437050866,-58818942,2050833735,-932944724,-1168286233,840505643,-428641387,-1067425632,427917720,-1638969391,-1545806721,1143087718,1412049534,999329963,193497219,-1941551414,-940642775,1807268051,672404540,-1478566279,-1134666014,369822493,-1378100362,-606019525,1681011286,1949973070,336202270,-1840690725,201721354,1210328172,-1201906460,-1614626211,-1110191250,1135389935,-1000185178,965841320,831886756,-739974089,-226920053,-706222286,-1949775805,1849112409,-630362697,26054028,-1311386268,-1672589614,1235855840,-663982924,-1403627782,-202050553,-806688219,-899324497,-193299826,1202630377,268961816,1874508501,-260540280,1243948399,1546530418,941366308,1470539505,1941222599,-1748580783,-873928669,-1579295364,-395021156,1042226977,-1773450275,1639824860,227249030,260737669,-529502064,2084453954,1907733956,-865704278,-1874310952,100860677,-134810111,470683154,-1033805405,1781871967,-1370007559,1773779408,394692241,-1715355304,974986535,664706745,-639508168,-336005101,731420851,571543859,-764843589,-1445340816,126783113,865375399,765172662,1008606754,361203602,-907417312,-2016489911,-1437248001,1344809080,-1512054918,59542671,1503764984,160008576,437062935,1707065306,-672733647,-2076032314,-798463816,-2109652541,697932208,1512910199,504303377,2075177163,-1470868228,1841019862,739644986],[-1513725085,-2064089988,-1712425097,-1913226373,234877682,-1110021269,-1310822545,1418839493,1348481072,50462977,-1446090905,2102799147,434634494,1656084439,-431117397,-1695779210,1167051466,-1658879358,1082771913,-2013627011,368048890,-340633255,-913422521,201060592,-331240019,1739838676,-44064094,-364531793,-1088185188,-145513308,-1763413390,1536934080,-1032472649,484572669,-1371696237,1783375398,1517041206,1098792767,49674231,1334037708,1550332980,-195975771,886171109,150598129,-1813876367,1940642008,1398944049,1059722517,201851908,1385547719,1699095331,1587397571,674240536,-1590192490,252314885,-1255171430,151914247,908333586,-1692696448,1038082786,651029483,1766729511,-847269198,-1612024459,454166793,-1642232957,1951935532,775166490,758520603,-1294176658,-290170278,-77881184,-157003182,1299594043,1639438038,-830622797,2068982057,1054729187,1901997871,-1760328572,-173649069,1757008337,0,750906861,1614815264,535035132,-931548751,-306816165,-1093375382,1183697867,-647512386,1265776953,-560706998,-728216500,-391096232,1250283471,1807470800,717615087,-447763798,384695291,-981056701,-677753523,1432761139,-1810791035,-813021883,283769337,100925954,-2114027649,-257929136,1148730428,-1171939425,-481580888,-207466159,-27417693,-1065336768,-1979347057,-1388342638,-1138647651,1215313976,82966005,-547111748,-1049119050,1974459098,1665278241,807407632,451280895,251524083,1841287890,1283575245,337120268,891687699,801369324,-507617441,-1573546089,-863484860,959321879,1469301956,-229267545,-2097381762,1199193405,-1396153244,-407216803,724703513,-1780059277,-1598005152,-1743158911,-778154161,2141445340,1715741218,2119445034,-1422159728,-2096396152,-896776634,700968686,-747915080,1009259540,2041044702,-490971554,487983883,1991105499,1004265696,1449407026,1316239930,504629770,-611169975,168560134,1816667172,-457679780,1570751170,1857934291,-280777556,-1497079198,-1472622191,-1540254315,936633572,-1947043463,852879335,1133234376,1500395319,-1210421907,-1946055283,1689376213,-761508274,-532043351,-1260884884,-89369002,133428468,634383082,-1345690267,-1896580486,-381178194,403703816,-714097990,-1997506440,1867130149,1918643758,607656988,-245913946,-948718412,1368901318,600565992,2090982877,-1662487436,557719327,-577352885,-597574211,-2045932661,-2062579062,-1864339344,1115438654,-999180875,-1429445018,-661632952,84280067,33027830,303828494,-1547542175,1600795957,-106014889,-798377543,-1860729210,1486471617,658119965,-1188585826,953803233,334231800,-1288988520,857870609,-1143838359,1890179545,-1995993458,-1489791852,-1238525029,574365214,-1844082809,550103529,1233637070,-5614251,2018519080,2057691103,-1895592820,-128343647,-2146858615,387583245,-630865985,836232934,-964410814,-1194301336,-1014873791,-1339450983,2002398509,287182607,-881086288,-56077228,-697451589,975967766],[1671808611,2089089148,2006576759,2072901243,-233963534,1807603307,1873927791,-984313403,810573872,16974337,1739181671,729634347,-31856642,-681396777,-1410970197,1989864566,-901410870,-2103631998,-918517303,2106063485,-99225606,1508618841,1204391495,-267650064,-1377025619,-731401260,-1560453214,-1343601233,-1665195108,-1527295068,1922491506,-1067738176,-1211992649,-48438787,-1817297517,644500518,911895606,1061256767,-150800905,-867204148,878471220,-1510714971,-449523227,-251069967,1905517169,-663508008,827548209,356461077,67897348,-950889017,593839651,-1017209405,405286936,-1767819370,84871685,-1699401830,118033927,305538066,-2137318528,-499261470,-349778453,661212711,-1295155278,1973414517,152769033,-2086789757,745822252,439235610,455947803,1857215598,1525593178,-1594139744,1391895634,994932283,-698239018,-1278313037,695947817,-482419229,795958831,-2070473852,1408607827,-781665839,0,-315833875,543178784,-65018884,-1312261711,1542305371,1790891114,-884568629,-1093048386,961245753,1256100938,1289001036,1491644504,-817199665,-798245936,-282409489,-1427812438,-82383365,1137018435,1305975373,861234739,-2053893755,1171229253,-116332039,33948674,2139225727,1357946960,1011120188,-1615190625,-1461498968,1374921297,-1543610973,1086357568,-1886780017,-1834139758,-1648615011,944271416,-184225291,-1126210628,-1228834890,-629821478,560153121,271589392,-15014401,-217121293,-764559406,-850624051,202643468,322250259,-332413972,1608629855,-1750977129,1154254916,389623319,-1000893500,-1477290585,2122513534,1028094525,1689045092,1575467613,422261273,1939203699,1621147744,-2120738431,1339137615,-595614756,577127458,712922154,-1867826288,-2004677752,1187679302,-299251730,-1194103880,339486740,-562452514,1591917662,186455563,-612979237,-532948000,844522546,978220090,169743370,1239126601,101321734,611076132,1558493276,-1034051646,-747717165,-1393605716,1655096418,-1851246191,-1784401515,-466103324,2039214713,-416098841,-935097400,928607799,1840765549,-1920204403,-714821163,1322425422,-1444918871,1823791212,1459268694,-200805388,-366620694,1706019429,2056189050,-1360443474,135794696,-1160417350,2022240376,628050469,779246638,472135708,-1494132826,-1261997132,-967731258,-400307224,-579034659,1956440180,522272287,1272813131,-1109630531,-1954148981,-1970991222,1888542832,1044544574,-1245417035,1722469478,1222152264,50660867,-167643146,236067854,1638122081,895445557,1475980887,-1177523783,-2037311610,-1051158079,489110045,-1632032866,-516367903,-132912136,-1733088360,288563729,1773916777,-646927911,-1903622258,-1800981612,-1682559589,505560094,-2020469369,-383727127,-834041906,1442818645,678973480,-545610273,-1936784500,-1577559647,-1988097655,219617805,-1076206145,-432941082,1120306242,1756942440,1103331905,-1716508263,762796589,252780047,-1328841808,1425844308,-1143575109,372911126],[1667474886,2088535288,2004326894,2071694838,-219017729,1802223062,1869591006,-976923503,808472672,16843522,1734846926,724270422,-16901657,-673750347,-1414797747,1987484396,-892713585,-2105369313,-909557623,2105378810,-84273681,1499065266,1195886990,-252703749,-1381110719,-724277325,-1566376609,-1347425723,-1667449053,-1532692653,1920112356,-1061135461,-1212693899,-33743647,-1819038147,640051788,909531756,1061110142,-134806795,-859025533,875846760,-1515850671,-437963567,-235861767,1903268834,-656903253,825316194,353713962,67374088,-943238507,589522246,-1010606435,404236336,-1768513225,84217610,-1701137105,117901582,303183396,-2139055333,-488489505,-336910643,656894286,-1296904833,1970642922,151591698,-2088526307,741110872,437923380,454765878,1852748508,1515908788,-1600062629,1381168804,993742198,-690593353,-1280061827,690584402,-471646499,791638366,-2071685357,1398011302,-774805319,0,-303223615,538992704,-50585629,-1313748871,1532751286,1785380564,-875870579,-1094788761,960056178,1246420628,1280103576,1482221744,-808498555,-791647301,-269538619,-1431640753,-67430675,1128514950,1296947098,859002214,-2054843375,1162203018,-101117719,33687044,2139062782,1347481760,1010582648,-1616922075,-1465326773,1364325282,-1549533603,1077985408,-1886418427,-1835881153,-1650607071,943212656,-168491791,-1128472733,-1229536905,-623217233,555836226,269496352,-58651,-202174723,-757961281,-842183551,202118168,320025894,-320065597,1600119230,-1751670219,1145359496,387397934,-993765485,-1482165675,2122220284,1027426170,1684319432,1566435258,421079858,1936954854,1616945344,-2122213351,1330631070,-589529181,572679748,707427924,-1869567173,-2004319477,1179044492,-286381625,-1195846805,336870440,-555845209,1583276732,185277718,-606374227,-522175525,842159716,976899700,168435220,1229577106,101059084,606366792,1549591736,-1027449441,-741118275,-1397952701,1650632388,-1852725191,-1785355215,-454805549,2038008818,-404278571,-926399605,926374254,1835907034,-1920103423,-707435343,1313788572,-1448484791,1819063512,1448540844,-185333773,-353753649,1701162954,2054852340,-1364268729,134748176,-1162160785,2021165296,623210314,774795868,471606328,-1499008681,-1263220877,-960081513,-387439669,-572687199,1953799400,522133822,1263263126,-1111630751,-1953790451,-1970633457,1886425312,1044267644,-1246378895,1718004428,1212733584,50529542,-151649801,235803164,1633788866,892690282,1465383342,-1179004823,-2038001385,-1044293479,488449850,-1633765081,-505333543,-117959701,-1734823125,286339874,1768537042,-640061271,-1903261433,-1802197197,-1684294099,505291324,-2021158379,-370597687,-825341561,1431699370,673740880,-539002203,-1936945405,-1583220647,-1987477495,218961690,-1077945755,-421121577,1111672452,1751693520,1094828930,-1717981143,757954394,252645662,-1330590853,1414855848,-1145317779,370555436],[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]],[[1374988112,2118214995,437757123,975658646,1001089995,530400753,-1392879445,1273168787,540080725,-1384747530,-1999866223,-184398811,1340463100,-987051049,641025152,-1251826801,-558802359,632953703,1172967064,1576976609,-1020300030,-2125664238,-1924753501,1809054150,59727847,361929877,-1083344149,-1789765158,-725712083,1484005843,1239443753,-1899378620,1975683434,-191989384,-1722270101,666464733,-1092530250,-259478249,-920605594,2110667444,1675577880,-451268222,-1756286112,1649639237,-1318815776,-1150570876,-25059300,-116905068,1883793496,-1891238631,-1797362553,1383856311,-1418472669,1917518562,-484470953,1716890410,-1293211641,800440835,-2033878118,-751368027,807962610,599762354,33778362,-317291940,-1966138325,-1485196142,-217582864,1315562145,1708848333,101039829,-785096161,-995688822,875451293,-1561111136,92987698,-1527321739,193195065,1080094634,1584504582,-1116860335,1042385657,-1763899843,-583137874,1306967366,-1856729675,1908694277,67556463,1615861247,429456164,-692196969,-1992277044,1742315127,-1326955843,126454664,-417768648,2043211483,-1585706425,2084704233,-125559095,0,159417987,841739592,504459436,1817866830,-49348613,260388950,1034867998,908933415,168810852,1750902305,-1688513327,607530554,202008497,-1822955761,-1259432238,463180190,-2134850225,1641816226,1517767529,470948374,-493635062,-1063245083,1008918595,303765277,235474187,-225720403,766945465,337553864,1475418501,-1351284916,-291906117,-1551933187,-150919521,1551037884,1147550661,1543208500,-1958532746,-886847780,-1225917336,-1192955549,-684598070,1113818384,328671808,-2067394272,-2058738563,-759480840,-1359400431,-953573011,496906059,-592301837,226906860,2009195472,733156972,-1452230247,294930682,1206477858,-1459843900,-1594867942,1451044056,573804783,-2025238841,-650587711,-1932877058,-1730933962,-1493859889,-1518674392,-625504730,1068351396,742039012,1350078989,1784663195,1417561698,-158526526,-1864845080,775550814,-2101104651,-1621262146,1775276924,1876241833,-819653965,-928212677,270040487,-392404114,-616842373,-853116919,1851332852,-325404927,-2091935064,-426414491,-1426069890,566021896,-283776794,-1159226407,1248802510,-358676012,699432150,832877231,708780849,-962227152,899835584,1951317047,-58537306,-527380304,866637845,-251357110,1106041591,2144161806,395441711,1984812685,1139781709,-861254316,-459930401,-1630423581,1282050075,-1054072904,1181045119,-1654724092,25965917,-91786125,-83148498,-1285087910,-1831087534,-384805325,1842759443,-1697160820,933301370,1509430414,-351060855,-827774994,-1218328267,-518199827,2051518780,-1663901863,1441952575,404016761,1942435775,1408749034,1610459739,-549621996,2017778566,-894438527,-1184316354,941896748,-1029488545,371049330,-1126030068,675039627,-15887039,967311729,135050206,-659233636,1683407248,2076935265,-718096784,1215061108,-793225406],[1347548327,1400783205,-1021700188,-1774573730,-885281941,-249586363,-1414727080,-1823743229,1428173050,-156404115,-1853305738,636813900,-61872681,-674944309,-2144979644,-1883938141,1239331162,1730525723,-1740248562,-513933632,46346101,310463728,-1551022441,-966011911,-419197089,-1793748324,-339776134,-627748263,768917123,-749177823,692707433,1150208456,1786102409,2029293177,1805211710,-584599183,-1229004465,401639597,1724457132,-1266823622,409198410,-2098914767,1620529459,1164071807,-525245321,-2068091986,486441376,-1795618773,1483753576,428819965,-2020286868,-1219331080,598438867,-495826174,1474502543,711349675,129166120,53458370,-1702443653,-1512884472,-231724921,-1306280027,-1174273174,1559041666,730517276,-1834518092,-252508174,-1588696606,-848962828,-721025602,533804130,-1966823682,-1657524653,-1599933611,839224033,1973745387,957055980,-1438621457,106852767,1371368976,-113368694,1033297158,-1361232379,1179510461,-1248766835,91341917,1862534868,-10465259,605657339,-1747534359,-863420349,2003294622,-1112479678,-2012771957,954669403,-612775698,1201765386,-377732593,-906460130,0,-2096529274,1211247597,-1407315600,1315723890,-67301633,1443857720,507358933,657861945,1678381017,560487590,-778347692,975451694,-1324610969,261314535,-759894378,-1642357871,1333838021,-1570644960,1767536459,370938394,182621114,-440360918,1128014560,487725847,185469197,-1376613433,-1188186456,-938205527,-2057834215,1286567175,-1141990947,-39616672,-1611202266,-1134791947,-985373125,878443390,1988838185,-590666810,1756818940,1673061617,-891866660,272786309,1075025698,545572369,2105887268,-120407235,296679730,1841768865,1260232239,-203640272,-334657966,-797457949,1814803222,-1716948807,-99511224,575138148,-995558260,446754879,-665420500,-282971248,-947435186,-1042728751,-24327518,915985419,-811141759,681933534,651868046,-1539330625,-466863459,223377554,-1687527476,1649704518,-1024029421,-393160520,1580087799,-175979601,-1096852096,2087309459,-1452288723,-1278270190,1003007129,-1492117379,1860738147,2077965243,164439672,-194094824,32283319,-1467789414,1709610350,2125135846,136428751,-420538904,-642062437,-833982666,-722821367,-701910916,-1355701070,824852259,818324884,-1070226842,930369212,-1493400886,-1327460144,355706840,1257309336,-146674470,243256656,790073846,-1921626666,1296297904,1422699085,-538667516,-476130891,457992840,-1195299809,2135319889,77422314,1560382517,1945798516,788204353,1521706781,1385356242,870912086,325965383,-1936009375,2050466060,-1906706412,-1981082820,-288446169,901210569,-304014107,1014646705,1503449823,1062597235,2031621326,-1082931401,-363595827,1533017514,350174575,-2038938405,-2117423117,1052338372,741876788,1606591296,1914052035,213705253,-1960297399,1107234197,1899603969,-569897805,-1663519516,-1872472383,1635502980,1893020342,1950903388,1120974935],[-1487908364,1699970625,-1530717673,1586903591,1808481195,1173430173,1487645946,59984867,-95084496,1844882806,1989249228,1277555970,-671330331,-875051734,1149249077,-1550863006,1514790577,459744698,244860394,-1058972162,1963115311,-267222708,-1750889146,-104436781,1608975247,-1667951214,2062270317,1507497298,-2094148418,567498868,1764313568,-935031095,-1989511742,2037970062,1047239000,1910319033,1337376481,-1390940024,-1402549984,984907214,1243112415,830661914,861968209,2135253587,2011214180,-1367032981,-1608712575,731183368,1750626376,-48656571,1820824798,-122203525,-752637069,48394827,-1890065633,-1423284651,671593195,-1039978571,2073724613,145085239,-2014171096,-1515052097,1790575107,-2107839210,472615631,-1265457287,-219090169,-492745111,-187865638,-1093335547,1646252340,-24460122,1402811438,1436590835,-516815478,-344611594,-331805821,-274055072,-1626972559,273792366,-1963377119,104699613,95345982,-1119466010,-1917480620,1560637892,-730921978,369057872,-81520232,-375925059,1137477952,-1636341799,1119727848,-1954019447,1530455833,-287606328,172466556,266959938,516552836,0,-2038232704,-314035669,1890328081,1917742170,-262898,945164165,-719438418,958871085,-647755249,-1507760036,1423022939,775562294,1739656202,-418409641,-1764576018,-1851909221,-984645440,547512796,1265195639,437656594,-1173691757,719700128,-532464606,387781147,218828297,-944901493,-1464259146,-1446505442,428169201,122466165,-574886247,1627235199,648017665,-172204942,1002783846,2117360635,695634755,-958608605,-60246291,-245122844,-590686415,-2062531997,574624663,287343814,612205898,1039717051,840019705,-1586641111,793451934,821288114,1391201670,-472877119,376187827,-1181111952,1224348052,1679968233,-1933268740,1058709744,752375421,-1863376333,1321699145,-775825096,-1560376118,188127444,-2117097739,-567761542,-1910056265,-1079754835,-1645990854,-1844621192,-862229921,1180849278,331544205,-1192718120,-144822727,-1342864701,-2134991011,-1820562992,766078933,313773861,-1724135252,2108100632,1668212892,-1149510853,2013908262,418672217,-1224610662,-1700232369,1852171925,-427906305,-821550660,-387518699,-1680229657,919489135,164948639,2094410160,-1297141340,590424639,-1808742747,1723872674,-1137216434,-895026046,-793714544,-669699161,-1739919100,-621329940,1343127501,-164685935,-695372211,-1337113617,1297403050,81781910,-1243373871,-2011476886,532201772,1367295589,-368796322,895287692,1953757831,1093597963,492483431,-766340389,1446242576,1192455638,1636604631,209336225,344873464,1015671571,669961897,-919226527,-437395172,-1321436601,-547775278,1933530610,-830924780,935293895,-840281097,-1436852227,1863638845,-611944380,-209597777,-1002522264,875313188,1080017571,-1015933411,621591778,1233856572,-1790836979,24197544,-1277294580,-459482956,-1047501738,-2073986101,-1234119374,1551124588,1463996600],[-190361519,1097159550,396673818,660510266,-1418998981,-1656360673,-94852180,-486304949,821712160,1986918061,-864644728,38544885,-438830001,718002117,893681702,1654886325,-1319482914,-1172609243,-368142267,-20913827,796197571,1290801793,1184342925,-738605461,-1889540349,-1835231979,1836772287,1381620373,-1098699308,1948373848,-529979063,-909622130,-1031181707,-1904641804,1480485785,-1183720153,-514869570,-2001922064,548169417,-835013507,-548792221,439452389,1362321559,1400849762,1685577905,1806599355,-2120213250,137073913,1214797936,1174215055,-563312748,2079897426,1943217067,1258480242,529487843,1437280870,-349698126,-1245576401,-981755258,923313619,679998000,-1079659997,57326082,377642221,-820237430,2041877159,133361907,1776460110,-621490843,96392454,878845905,-1493267772,777231668,-212492126,-1964953083,-152341084,-2081670901,1626319424,1906247262,1846563261,562755902,-586793578,1040559837,-423803315,1418573201,-1000536719,114585348,1343618912,-1728371687,-1108764714,1078185097,-643926169,-398279248,-1987344377,425408743,-923870343,2081048481,1108339068,-2078357000,0,-2138668279,736970802,292596766,1517440620,251657213,-2059905521,-1361764803,758720310,265905162,1554391400,1532285339,908999204,174567692,1474760595,-292105548,-1684955621,-1060810880,-601841055,2001430874,303699484,-1816524062,-1607801408,585122620,454499602,151849742,-1949848078,-1230456531,514443284,-249985705,1963412655,-1713521682,2137062819,19308535,1928707164,1715193156,-75615141,1126790795,600235211,-302225226,-453942344,836553431,1669664834,-1759363053,-971956092,1243905413,-1153566510,-114159186,698445255,-1641067747,-1305414692,-2041385971,-1042034569,-1290376149,1891211689,-1807156719,-379313593,-57883480,-264299872,2100090966,865136418,1229899655,953270745,-895287668,-737462632,-176042074,2061379749,-1215420710,-1379949505,983426092,2022837584,1607244650,2118541908,-1928084746,-658970480,972512814,-1011878526,1568718495,-795640727,-718427793,621982671,-1399243832,410887952,-1671205144,1002142683,645401037,1494807662,-1699282452,1335535747,-1787927066,-1671510,-1127282655,367585007,-409216582,1865862730,-1626745622,-1333995991,-1531793615,1059270954,-1517014842,-1570324427,1320957812,-2100648196,-1865371424,-1479011021,77089521,-321194175,-850391425,-1846137065,1305906550,-273658557,-1437772596,-1778065436,-776608866,1787304780,740276417,1699839814,1592394909,-1942659839,-2022411270,188821243,1729977011,-606973294,274084841,-699985043,-681472870,-1593017801,-132870567,322734571,-1457000754,1640576439,484830689,1202797690,-757114468,-227328171,349075736,-952647821,-137500077,-39167137,1030690015,1155237496,-1342996022,1757691577,607398968,-1556062270,499347990,-500888388,1011452712,227885567,-1476300487,213114376,-1260086056,1455525988,-880516741,850817237,1817998408,-1202240816],[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]]]
                , R$im = R$jV[0]
                , R$g9 = R$jV[1];
            if (!R$im[0][0] && !R$im[0][1]) {
                R$e3(R$hT, R$im, R$g9);
            }
            var R$b8 = R$cH(R$dm, R$im, R$g9);
            ;function R$iM(R$ci, R$jS) {
                var R$cX = Math["floor"](R$ci.length / 16) + 1, R$dG, R$i1 = [], R$kz = 16 - (R$ci.length % 16), R$dq, R$ka;
                if (R$jS) {
                    R$i1 = R$dq = R$bB();
                }
                var R$c5 = R$ci["slice"](0);
                R$ka = R$ci.length + R$kz;
                for (R$dG = R$ci.length; R$dG < R$ka; )
                    R$c5[R$dG++] = R$kz;
                R$c5 = R$l9(R$c5);
                for (R$dG = 0; R$dG < R$cX; ) {
                    R$ka = R$c5["slice"](R$dG << 2, (++R$dG) << 2);
                    R$ka = R$dq ? R$lJ(R$ka, R$dq) : R$ka;
                    R$dq = R$lp(R$b8, R$ka, 0, R$im);
                    R$i1 = R$i1["concat"](R$dq);
                }
                return R$mg(R$i1);
            }
            function R$ce(R$jS, R$c5) {
                var R$cX, R$dq, R$ci, R$ka, R$dG = [], R$i1, R$kz;
                R$jS = R$l9(R$jS);
                if (R$c5) {
                    R$kz = R$jS["slice"](0, 4);
                    R$jS = R$jS["slice"](4);
                }
                R$cX = R$jS.length / 4;
                for (R$dq = 0; R$dq < R$cX; ) {
                    R$ka = R$jS["slice"](R$dq << 2, (++R$dq) << 2);
                    R$ci = R$lp(R$b8, R$ka, 1, R$g9);
                    R$dG = R$dG["concat"](R$kz ? R$lJ(R$ci, R$kz) : R$ci);
                    R$kz = R$ka;
                }
                R$dG = R$mg(R$dG);
                R$i1 = R$dG[R$dG.length - 1];
                R$dG["splice"](R$dG.length - R$i1, R$i1);
                return R$dG;
            }
            ;var R$gc = {};
            R$gc.R$dy = R$iM;
            R$gc.R$lb = R$ce;
            return R$gc;
        }
        function R$e3(R$hT, R$g9, R$kz) {
            var R$iM = R$g9[4], R$dG = R$kz[4], R$im, R$i1, R$ka, R$jS = [], R$dq = [], R$ce, R$c5, R$dm, R$b8, R$gc, R$jV;
            for (R$im = 0; R$im < 256; R$im++) {
                R$dq[(R$jS[R$im] = R$im << 1 ^ (R$im >> 7) * 283) ^ R$im] = R$im;
            }
            for (R$i1 = R$ka = 0; !R$iM[R$i1]; R$i1 ^= R$ce || 1,
                R$ka = R$dq[R$ka] || 1) {
                R$b8 = R$ka ^ R$ka << 1 ^ R$ka << 2 ^ R$ka << 3 ^ R$ka << 4;
                R$b8 = R$b8 >> 8 ^ R$b8 & 255 ^ 99;
                R$iM[R$i1] = R$b8;
                R$dG[R$b8] = R$i1;
                R$ce = R$jS[R$i1];
            }
            for (R$im = 0; R$im < 256; R$im++) {
                R$dG[R$iM[R$im]] = R$im;
            }
            for (R$i1 = 0; R$i1 < 256; R$i1++) {
                R$b8 = R$iM[R$i1];
                R$dm = R$jS[R$c5 = R$jS[R$ce = R$jS[R$i1]]];
                R$jV = R$dm * 0x1010101 ^ R$c5 * 0x10001 ^ R$ce * 0x101 ^ R$i1 * 0x1010100;
                R$gc = R$jS[R$b8] * 0x101 ^ R$b8 * 0x1010100;
                for (R$im = 0; R$im < 4; R$im++) {
                    R$g9[R$im][R$i1] = R$gc = R$gc << 24 ^ R$gc >>> 8;
                    R$kz[R$im][R$b8] = R$jV = R$jV << 24 ^ R$jV >>> 8;
                }
            }
            for (R$im = 0; R$im < 5; R$im++) {
                R$g9[R$im] = R$g9[R$im]["slice"](0);
                R$kz[R$im] = R$kz[R$im]["slice"](0);
            }
        }
    
        function R$cH(R$ce, R$g9, R$i1) {
            var R$gc = R$ce;
            if (R$ce.length % 16 !== 0)
                R$gc = R$iE(R$ce);
            var R$ka = R$l9(R$gc);
            var R$iM, R$b8, R$jV, R$dm, R$dG, R$hT = R$g9[4], R$im = R$ka.length, R$dq = 1;
            var R$dm = R$ka["slice"](0);
            var R$dG = [];
            for (R$iM = R$im; R$iM < 4 * R$im + 28; R$iM++) {
                R$jV = R$dm[R$iM - 1];
                if (R$iM % R$im === 0 || (R$im === 8 && R$iM % R$im === 4)) {
                    R$jV = R$hT[R$jV >>> 24] << 24 ^ R$hT[R$jV >> 16 & 255] << 16 ^ R$hT[R$jV >> 8 & 255] << 8 ^ R$hT[R$jV & 255];
                    if (R$iM % R$im === 0) {
                        R$jV = R$jV << 8 ^ R$jV >>> 24 ^ R$dq << 24;
                        R$dq = R$dq << 1 ^ (R$dq >> 7) * 283;
                    }
                }
                R$dm[R$iM] = R$dm[R$iM - R$im] ^ R$jV;
            }
            for (R$b8 = 0; R$iM; R$b8++,
                R$iM--) {
                R$jV = R$dm[R$b8 & 3 ? R$iM : R$iM - 4];
                if (R$iM <= 4 || R$b8 < 4) {
                    R$dG[R$b8] = R$jV;
                } else {
                    R$dG[R$b8] = R$i1[0][R$hT[R$jV >>> 24]] ^ R$i1[1][R$hT[R$jV >> 16 & 255]] ^ R$i1[2][R$hT[R$jV >> 8 & 255]] ^ R$i1[3][R$hT[R$jV & 255]];
                }
            }
            return [R$dm, R$dG];
        }
    
        function R$iE(R$ka) {
            var R$g9 = R$ka["slice"](0);
            if (R$g9.length < 5) {
                return;
            }
            var R$b8 = R$g9["pop"]();
            var R$hT = 0
                , R$im = R$g9.length;
            while (R$hT < R$im) {
                R$g9[R$hT++] ^= R$b8;
            }
            var R$iM = R$g9.length - 4;
            var R$dm = R$dE() - R$l9(R$g9["slice"](R$iM))[0];
            R$g9 = R$g9["slice"](0, R$iM);
            var R$ce = Math["floor"](Math["log"](R$dm / 1.164 + 1));
            var R$jV = R$g9.length;
            var R$gc = [0, 1][1];// todo
            R$hT = 0;
            while (R$hT < R$jV) {
                R$g9[R$hT] = R$ce | (R$g9[R$hT++] ^ R$gc);
            }
            //R$j2(8, R$ce);
            return R$g9;
        }
        function R$dE() {
            return Math["ceil"](R$mJ() / 1000);
        }
        function R$mJ() {
            return new Date()["getTime"]();
        }
        function R$l9(R$gc) {
            var R$im = R$gc.length / 4
                , R$hT = 0
                , R$iM = 0
                , R$b8 = R$gc.length;
            var R$jV = new Array(R$im);
            while (R$hT < R$b8) {
                R$jV[R$iM++] = ((R$gc[R$hT++] << 24) | (R$gc[R$hT++] << 16) | (R$gc[R$hT++] << 8) | (R$gc[R$hT++]));
            }
            return R$jV;
        }
        function R$j2(R$jV, R$gc) {
            R$ec |= R$jV;
            if (R$gc)
                R$mX |= R$jV;
        }
        function R$bB() {
            return [R$hO(0xFFFFFFFF), R$hO(0xFFFFFFFF), R$hO(0xFFFFFFFF), R$hO(0xFFFFFFFF)];
        }
        function R$lJ(R$gc, R$jV) {
            return [(R$gc[0] ^ R$jV[0]), (R$gc[1] ^ R$jV[1]), (R$gc[2] ^ R$jV[2]), (R$gc[3] ^ R$jV[3])];
        }
        function R$lp(R$ce, R$ci, R$aR, R$cX) {
            var R$jS = R$ce[R$aR], R$jV = R$ci[0] ^ R$jS[0], R$hT = R$ci[R$aR ? 3 : 1] ^ R$jS[1], R$gc = R$ci[2] ^ R$jS[2], R$iM = R$ci[R$aR ? 1 : 3] ^ R$jS[3], R$kz, R$ka, R$dG, R$c5 = R$jS.length / 4 - 2, R$i1, R$i5 = 4, R$kv = [0, 0, 0, 0], R$g9 = R$cX[0], R$dq = R$cX[1], R$dm = R$cX[2], R$b8 = R$cX[3], R$im = R$cX[4];
            for (R$i1 = 0; R$i1 < R$c5; R$i1++) {
                R$kz = R$g9[R$jV >>> 24] ^ R$dq[R$hT >> 16 & 255] ^ R$dm[R$gc >> 8 & 255] ^ R$b8[R$iM & 255] ^ R$jS[R$i5];
                R$ka = R$g9[R$hT >>> 24] ^ R$dq[R$gc >> 16 & 255] ^ R$dm[R$iM >> 8 & 255] ^ R$b8[R$jV & 255] ^ R$jS[R$i5 + 1];
                R$dG = R$g9[R$gc >>> 24] ^ R$dq[R$iM >> 16 & 255] ^ R$dm[R$jV >> 8 & 255] ^ R$b8[R$hT & 255] ^ R$jS[R$i5 + 2];
                R$iM = R$g9[R$iM >>> 24] ^ R$dq[R$jV >> 16 & 255] ^ R$dm[R$hT >> 8 & 255] ^ R$b8[R$gc & 255] ^ R$jS[R$i5 + 3];
                R$i5 += 4;
                R$jV = R$kz;
                R$hT = R$ka;
                R$gc = R$dG;
            }
            for (R$i1 = 0; R$i1 < 4; R$i1++) {
                R$kv[R$aR ? 3 & -R$i1 : R$i1] = R$im[R$jV >>> 24] << 24 ^ R$im[R$hT >> 16 & 255] << 16 ^ R$im[R$gc >> 8 & 255] << 8 ^ R$im[R$iM & 255] ^ R$jS[R$i5++];
                R$kz = R$jV;
                R$jV = R$hT;
                R$hT = R$gc;
                R$gc = R$iM;
                R$iM = R$kz;
            }
            return R$kv;
        }
    
        R$d7()
    '''
    return js_str


js_executor = execjs.compile(get_js_file())


class TimeUtil(object):
    @classmethod
    def parse_timezone(cls, timezone):
        """
        解析时区表示
        :param timezone: str eg: +8
        :return: dict{symbol, offset}
        """
        result = re.match(r'(?P<symbol>[+-])(?P<offset>\d+)', timezone)
        symbol = result.groupdict()['symbol']
        offset = int(result.groupdict()['offset'])

        return {
            'symbol': symbol,
            'offset': offset
        }

    @classmethod
    def convert_timezone(cls, dt, timezone="+0"):
        """默认是utc时间，需要"""
        result = cls.parse_timezone(timezone)
        symbol = result['symbol']

        offset = result['offset']

        if symbol == '+':
            return dt + datetime.timedelta(hours=offset)
        elif symbol == '-':
            return dt - datetime.timedelta(hours=offset)
        else:
            raise Exception('dont parse timezone format')


def pushplus(title, content):
    url = 'http://www.pushplus.plus/send'
    data = {
        "token": PUSH_PLUS_TOKEN,
        "title": title,
        "content": content
    }
    print(requests.post(url=url, json=data).json())


def format_msg():
    str1 = ''
    for item in msg_list:
        str1 += str(item) + "\r\n"
    return str1


def get(url, data):
    print(data)
    ret = requests.get(url=url, params=data, headers=headers).json()
    print(ret)
    return ret


def post(url, data, token=None):
    request_sign = js_executor.call('R$jm')
    data['L9skahqwVwYX3e4https'] = request_sign
    print(data)
    ret = requests.post(url=url, params=data, headers={"Authorization": token, "Cookie": "L9skahqwVwYX3e4https="+request_sign, **headers}).json()
    print(ret)
    return ret


def refresh(refresh_token):
    url = 'https://account.bol.wo.cn/cuuser/cuauth/token'
    data = {
        "clientSecret": "ybdkqwvi5hulnckjm255gvxqsb8elygo",
        "clientId": "woportal",
        "grantType": "refresh_token",
        "refreshToken": refresh_token,
    }
    return get(url, data)


def user_info(access_token):
    url = 'https://wo.cn/woportalapi/cuuser/auth/userinfo'
    data = {
        "accessToken": access_token,
        "channelId": "202"
    }
    return get(url, data)

def get_all_page(token):
    url = 'https://w2ol.wo.cn/woportalapi/woportal/rewarding/getAllPage'
    data = {
        "pageId": "092adcce-fc3e-463f-8cc2-96b516b045c7",
        "channel": "Android",
        "appName": ""
    }
    return post(url, data, token)


def sign(policy_id, trail_id, task_id, rewarding_task_id, token):
    url = 'https://w2ol.wo.cn/woportalapi/woportal/rewarding/sign'
    data = {
        "policyId": policy_id,
        "trailId": trail_id,
        "taskId": task_id,
        "rewardingTaskId": rewarding_task_id,
        "disposable": "true",
    }
    return post(url, data, token)


def gift_list(token):
    url = 'https://w2ol.wo.cn/woportalapi/woportal/gift/giftList'
    data = {
        "pageNum": "1",
        "pageSize": "20",
        "consumptionStatus": ""
    }
    return post(url, data, token)


def get_prize(history_id, token):
    url = 'https://w2ol.wo.cn/woportalapi/woportal/gift/getPrize'
    data = {
        "historyId": history_id,
        "disposable": "true"
    }
    return post(url, data, token)


# 与当前相差天数
def get_diff_days_2_now(date_str):
    utc_now = datetime.datetime.utcnow()
    now_time = TimeUtil.convert_timezone(utc_now, '+8')
    compare_time = time.strptime(date_str, "%Y-%m-%d")
    # 比较日期
    date1 = datetime.datetime(compare_time[0], compare_time[1], compare_time[2])
    date2 = datetime.datetime(now_time.year, now_time.month, now_time.day)
    diff_days = (date2 - date1).days
    return diff_days


def task(config):
    mobile = config['mobile']
    msg = ['开始执行: ' + mobile]
    token = config['authToken']
    ret = get_all_page(token)
    if ret['code'] != '0000':
        msg.append('token失效')
        msg.append("----------------------------------------------")
        msg_list.extend(msg)
        return
    policy_id = ret['data']['continuationRewardingTask']['rewardingTaskInfo']['policyId']
    print("policyId: " + policy_id)
    for item in ret['data']['creditPolicies']:
        if item['policyId'] == policy_id:
            rewarding_task_id = item['creditRewardingTaskId']
            print("rewardingTaskId: " + rewarding_task_id)
            first_sign = item['tasks'][0]['effectiveFrom']
            print(first_sign)
            days = get_diff_days_2_now(first_sign.split(' ')[0])
            print("相差天数: " + str(days))
            msg.append("第 " + str(days + 1) + " 天")
            if item['tasks'][days]['updateTime'] is not None:
                msg.append("今日已签到, 签到时间: " + item['tasks'][days]['updateTime'])
            else:
                for task_info in ret['data']['getRewardingTask']['rewardingTaskInfos']:
                    if task_info['policyId'] == policy_id:
                        rewarding_trails = task_info['rewardingTrails']
                        trail_id = rewarding_trails[days]['trailId']
                        task_id = rewarding_trails[days]['taskId']
                        print("trailId: " + trail_id)
                        print("taskId: " + task_id)
                        sign_ret = sign(policy_id, trail_id, task_id, rewarding_task_id, token)
                        msg.append(sign_ret['msg'])
    # 兑换奖品
    ret = gift_list(token)
    for item in ret['data']:
        if item['consumptionStatus'] == 0:
            result = get_prize(item['historyId'], token)
            msg.append(result['msg'])
    msg.append("----------------------------------------------")
    msg_list.extend(msg)


def main_handler(event, context):
    l = []
    for config in config_list:
        p = threading.Thread(target=task, args=(config,))
        l.append(p)
        p.start()
    for i in l:
        i.join()
    content = format_msg()
    if PUSH_PLUS_TOKEN != '':
        count = 0
        error_count = 0
        for item in msg_list:
            if '----------------------------------------------' == item:
                count = count + 1
            if 'token失效' == item:
                error_count = error_count + 1
        if error_count > 0:
            pushplus('沃门户任务Token失效请及时更新, 成功执行 ' + str(count), content)
        else:
            pushplus('沃门户任务, 成功执行 ' + str(count), content)
    print(content)
    return content


if __name__ == '__main__':
    main_handler('', '')
